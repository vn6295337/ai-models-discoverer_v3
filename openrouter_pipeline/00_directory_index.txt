OpenRouter Pipeline Directory Index

DIRECTORY STRUCTURE:
================================================================================
üìÅ 01_scripts/            - All Python pipeline scripts (A-T + Z orchestrator)
üìÅ 02_outputs/            - Generated pipeline output files
üìÅ 03_configs/            - JSON configuration files (01-11 numbered)
üìÅ 04_utils/              - Utility modules (output_utils.py)
üìÑ 00_directory_index.txt - This directory overview file

PIPELINE OVERVIEW:
================================================================================
- 23 pipeline scripts (A-U execution order + Z orchestrator)
- 11 configuration files (01-11 numbered by usage)
- 24+ stage output files (generated during execution)
- Pipeline processes OpenRouter API data through licensing, modalities, and deployment

PIPELINE SCRIPTS (in 01_scripts/):
================================================================================

A_fetch_api_models.py                      - Fetches model data from OpenRouter API

B_filter_models.py                         - Filters models with sequential billing detection

C_extract_google_licenses.py               - Extracts Google model licenses

D_extract_meta_licenses.py                 - Extracts Meta model licenses

E_fetch_other_license_info_urls_from_hf.py - Fetches Non-Google/Meta license URLs from HuggingFace

F_fetch_other_license_names_from_hf.py     - Fetches Non-Google/Meta license names from HuggingFace

G_standardize_other_license_names_from_hf.py - Standardizes Non-Google/Meta license names

H_bucketize_other_license_names.py         - Categorizes Non-Google/Meta license names

I_opensource_license_urls.py               - Processes open source license URLs

J_custom_license_urls.py                   - Processes custom license URLs

K_collate_opensource_licenses.py           - Collates open source licenses

L_collate_custom_licenses.py               - Collates custom licenses

M_final_list_of_licenses.py                - Creates final license list

N_extract_raw_modalities.py                - Extracts model modalities (enhanced Gemma naming)

O_standardize_raw_modalities.py            - Standardizes modalities

P_enrich_provider_info.py                  - Enriches provider information

Q_create_db_data.py                        - Creates database-ready data

R_filter_db_data.py                        - Filters final database data

S_compare_pipeline_with_supabase.py        - Compares pipeline with Supabase data

T_refresh_supabase_working_version.py      - Updates Supabase working version (enhanced .env loading)

U_deploy_to_ai_models_main.py              - Deploys to main AI models table (enhanced .env loading)

Z_run_A_to_S.py                            - Interactive pipeline orchestrator (A-S)

CONFIGURATION FILES (in 03_configs/):
================================================================================

01_api_configuration.json                  - API configuration settings (A)

02_models_filtering_rules.json             - Model filtering criteria with billing keywords (B)

03_google_models_licenses.json             - Google model license mappings (C)

04_license_standardization_rules.json      - License standardization rules (G)

05_opensource_license_urls.json            - Open source license URLs (H,I)

06_modality_standardization.json           - Modality standardization rules (O)

07_google_models_modalities.json           - Google model modality mappings (O)

08_provider_enrichment.json                - Provider enrichment rules (P)

09_database_schema.json                    - Database schema definition (Q)

10_field_mapping.json                      - Field mapping configuration (Q)

11_remove_models.json                      - Models to exclude (R)

STAGE OUTPUT FILES (in 02_outputs/):
================================================================================

A-fetched-api-models.json                  - Raw API data from OpenRouter
A-fetched-api-models-report.txt            - Human readable API fetch report

B-filtered-models.json                     - Filtered models (free only, no billing requirements)
B-filtered-models-report.txt               - Sequential filtering report with billing detection

C-google-licenses.json                     - Google model licenses

D-meta-licenses.json                       - Meta model licenses

E-other-license-info-urls-from-hf.json     - HuggingFace license URLs

F-other-license-names-from-hf.json         - HuggingFace license names

G-standardized-other-license-names-from-hf.json - Standardized HF licenses

H-opensource-license-names.json            - Open source license names
H-custom-license-names.json                - Custom license names

I-opensource-license-urls.json             - Open source license URLs

J-custom-license-urls.json                 - Custom license URLs

K-collated-opensource-licenses.json        - Collated open source licenses

L-collated-custom-licenses.json            - Collated custom licenses

M-final-license-list.json                  - Final license compilation

N-raw-modalities.json                      - Raw model modalities

O-standardized-modalities.json             - Standardized modalities

P-provider-enriched.json                   - Provider-enriched data

Q-created-db-data.json                     - Database-ready data

R_filtered_db_data.json                    - Final filtered database data

S-field-comparison-report.txt              - Pipeline vs Supabase comparison report

T-supabase-refresh-report.txt              - Supabase working version refresh report

U-deploy-to-ai-models-main-report.txt      - Production deployment report

Z-pipeline-execution-report.txt            - Pipeline execution status report

UTILITY MODULES (in 04_utils/):
================================================================================
output_utils.py                            - Output directory and file path utilities

PIPELINE FLOW:
================================================================================
A ‚Üí B ‚Üí C ‚Üí D ‚Üí E ‚Üí F ‚Üí G ‚Üí H ‚Üí I ‚Üí J ‚Üí K ‚Üí L ‚Üí M ‚Üí N ‚Üí O ‚Üí P ‚Üí Q ‚Üí R ‚Üí S ‚Üí T ‚Üí U
      ‚Üì
Sequential: Free pricing ‚Üí Billing detection ‚Üí Keyword filtering

DEPLOYMENT FLOW:
================================================================================
Pipeline Data (R) ‚Üí working_version (T) ‚Üí ai_models_main (U)

INTERACTIVE ORCHESTRATOR:
================================================================================
Z_run_A_to_S.py offers three execution modes:

1. Run all scripts (A to S)

2. Run script range (e.g., C to P)

3. Run specific scripts (e.g., R, S)

