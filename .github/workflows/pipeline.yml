name: OpenRouter Pipeline

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC
  workflow_dispatch:  # Allow manual trigger
  push:
    branches: [ main ]
    paths:
      - '**.py'
      - 'requirements.txt'
      - '.github/workflows/**'

jobs:
  run-pipeline:
    runs-on: ubuntu-latest
    timeout-minutes: 180  # 3 hours max

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create .env file
      run: |
        echo "SUPABASE_URL=https://atilxlecbaqcksnrgzav.supabase.co" >> .env
        echo "SUPABASE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImF0aWx4bGVjYmFxY2tzbnJnemF2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTIzOTY5MTYsImV4cCI6MjA2Nzk3MjkxNn0.sYRFyQIEzZMlgg5RtHTXDSpvxl-KrJ8E7U3_UroIJog" >> .env

    - name: Run complete pipeline
      run: |
        python Z_run_A_to_R.py

    - name: Upload pipeline report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: pipeline-execution-report
        path: Z-pipeline-execution-report.txt
        retention-days: 30

    - name: Upload processed data
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: processed-data
        path: |
          *.json
          !**/node_modules/**
        retention-days: 7

    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'Pipeline Failed - ' + new Date().toISOString().split('T')[0],
            body: 'The OpenRouter pipeline failed. Check the Actions logs for details.',
            labels: ['pipeline-failure', 'automated']
          })