name: Google Pipeline (G & H Scripts)

on:
  workflow_dispatch:  # Manual trigger only
    inputs:
      script_choice:
        description: 'Choose which script to run (mutually exclusive)'
        required: true
        default: 'none'
        type: choice
        options:
        - 'none'
        - 'run_g'
        - 'run_h'

jobs:
  google-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: write  # Allow writing to repository

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      working-directory: google_pipeline
      run: |
        python -m pip install --upgrade pip
        pip install -r 03_configs/requirements.txt

    - name: Set environment variables
      env:
        PIPELINE_SUPABASE_URL: ${{ secrets.PIPELINE_SUPABASE_URL }}
      run: |
        echo "‚úÖ Environment variables set from GitHub secrets"

    - name: Show execution plan
      run: |
        echo "üéØ Google Pipeline Execution Plan:"
        echo "Selected option: ${{ inputs.script_choice }}"
        if [[ "${{ inputs.script_choice }}" == "run_g" ]]; then
          echo "Will execute: G_refresh_supabase_working_version.py (Refresh Working Version)"
        elif [[ "${{ inputs.script_choice }}" == "run_h" ]]; then
          echo "Will execute: H_deploy_to_supabase_ai_models_main.py (Deploy to Production)"
        else
          echo "No script will be executed (none selected)"
        fi

    - name: Run G_refresh_supabase_working_version.py
      if: ${{ inputs.script_choice == 'run_g' }}
      working-directory: google_pipeline
      env:
        PIPELINE_SUPABASE_URL: ${{ secrets.PIPELINE_SUPABASE_URL }}
      run: |
        echo "üîÑ Running G_refresh_supabase_working_version.py..."
        echo "‚ö†Ô∏è  This will refresh the Supabase working_version_v3 table with Google pipeline data"
        python3 -u 01_scripts/G_refresh_supabase_working_version.py

    - name: Run H_deploy_to_supabase_ai_models_main.py
      if: ${{ inputs.script_choice == 'run_h' }}
      working-directory: google_pipeline
      env:
        PIPELINE_SUPABASE_URL: ${{ secrets.PIPELINE_SUPABASE_URL }}
      run: |
        echo "üöÄ Running H_deploy_to_supabase_ai_models_main.py..."
        echo "‚ö†Ô∏è  This will deploy from working_version_v3 to ai_models_main_v3"
        python3 -u 01_scripts/H_deploy_to_supabase_ai_models_main.py

    - name: Upload deployment logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: google-deployment-logs
        path: |
          google_pipeline/02_outputs/*.log
          google_pipeline/02_outputs/*-deployment-*.txt
          google_pipeline/02_outputs/G-*.txt
          google_pipeline/02_outputs/H-*.txt
        retention-days: 7

    - name: Show completion summary
      if: success()
      run: |
        echo "‚úÖ Google pipeline deployment completed successfully"
        echo "Script executed: ${{ inputs.script_choice }}"
        if [[ "${{ inputs.script_choice }}" == "run_g" ]]; then
          echo "‚úÖ Working version table refreshed with Google data"
        elif [[ "${{ inputs.script_choice }}" == "run_h" ]]; then
          echo "‚úÖ Data deployed to main ai_models table"
        else
          echo "‚ÑπÔ∏è  No script was executed"
        fi
        echo "Check deployment logs artifact for detailed output"

    - name: Show failure summary
      if: failure()
      run: |
        echo "‚ùå Google pipeline deployment failed"
        echo "Script that failed: ${{ inputs.script_choice }}"
        echo "Check deployment logs artifact for error details"