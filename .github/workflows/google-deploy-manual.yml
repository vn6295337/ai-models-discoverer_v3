name: Manual Google Deploy (S, T & U Scripts)

on:
  workflow_dispatch:  # Manual trigger only
    inputs:
      run_s_script:
        description: 'Run S_compare_pipeline_with_supabase.py (Field Comparison)'
        required: false
        default: true
        type: boolean
      run_t_script:
        description: 'Run T_supabase_working_version_refresh.py (Refresh Working Version)'
        required: false
        default: true
        type: boolean
      run_u_script:
        description: 'Run U_ai_models_main_deploy.py (Deploy to Production)'
        required: false
        default: false
        type: boolean

jobs:
  manual-google-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: write  # Allow writing to repository

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      working-directory: google_pipeline
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create .env file
      working-directory: google_pipeline
      run: |
        echo "SUPABASE_URL=https://atilxlecbaqcksnrgzav.supabase.co" >> .env
        echo "SUPABASE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImF0aWx4bGVjYmFxY2tzbnJnemF2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTIzOTY5MTYsImV4cCI6MjA2Nzk3MjkxNn0.sYRFyQIEzZMlgg5RtHTXDSpvxl-KrJ8E7U3_UroIJog" >> .env

    - name: Run S_compare_pipeline_with_supabase.py
      if: ${{ inputs.run_s_script == true }}
      working-directory: google_pipeline
      run: |
        echo "🔍 Running S_compare_pipeline_with_supabase.py (Field Comparison)..."
        python -u S_compare_pipeline_with_supabase.py

    - name: Run T_supabase_working_version_refresh.py
      if: ${{ inputs.run_t_script == true }}
      working-directory: google_pipeline
      run: |
        echo "🔄 Running T_supabase_working_version_refresh.py (Refresh Working Version)..."
        python -u T_supabase_working_version_refresh.py

    - name: Run U_ai_models_main_deploy.py
      if: ${{ inputs.run_u_script == true }}
      working-directory: google_pipeline
      run: |
        echo "🚀 Running U_ai_models_main_deploy.py (Deploy to Production)..."
        python -u U_ai_models_main_deploy.py

    - name: Commit deployment reports to repository
      if: always()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        # Ensure pipeline-outputs directory exists
        mkdir -p google_pipeline/pipeline-outputs

        # Add timestamp file for manual deployment
        echo "Google Manual Deployment completed: $(date -u)" > google_pipeline/pipeline-outputs/manual-deploy-run.txt
        echo "Workflow run: ${{ github.run_number }}" >> google_pipeline/pipeline-outputs/manual-deploy-run.txt
        echo "Repository: ${{ github.repository }}" >> google_pipeline/pipeline-outputs/manual-deploy-run.txt
        echo "S script run: ${{ inputs.run_s_script }}" >> google_pipeline/pipeline-outputs/manual-deploy-run.txt
        echo "T script run: ${{ inputs.run_t_script }}" >> google_pipeline/pipeline-outputs/manual-deploy-run.txt
        echo "U script run: ${{ inputs.run_u_script }}" >> google_pipeline/pipeline-outputs/manual-deploy-run.txt

        # Commit if there are changes
        git add google_pipeline/pipeline-outputs/
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Google manual deployment: Run #${{ github.run_number }} $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          git push origin main
          echo "✅ Google deployment reports committed to repository"
        fi

    - name: Upload deployment logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: google-deployment-logs
        path: |
          google_pipeline/pipeline-outputs/*.log
          google_pipeline/pipeline-outputs/*-deployment-*.txt
          google_pipeline/pipeline-outputs/S-*.txt
          google_pipeline/pipeline-outputs/T-*.txt
          google_pipeline/pipeline-outputs/U-*.txt
          google_pipeline/pipeline-outputs/*-backup-*.json
        retention-days: 7

    - name: Upload comparison reports
      uses: actions/upload-artifact@v4
      if: ${{ inputs.run_s_script == true }}
      with:
        name: google-comparison-reports
        path: |
          google_pipeline/pipeline-outputs/S-field-comparison-report.txt
        retention-days: 30

    - name: Show completion summary
      if: success()
      run: |
        echo "✅ Google manual deployment completed successfully"
        echo "📊 Scripts executed:"
        echo "  - S script (Field Comparison): ${{ inputs.run_s_script }}"
        echo "  - T script (Refresh Working Version): ${{ inputs.run_t_script }}"
        echo "  - U script (Deploy to Production): ${{ inputs.run_u_script }}"
        echo "📁 Check deployment logs artifact for detailed output"
        echo "📈 Check comparison reports artifact for field analysis"

    - name: Show failure summary
      if: failure()
      run: |
        echo "❌ Google manual deployment failed"
        echo "📊 Scripts that were supposed to run:"
        echo "  - S script (Field Comparison): ${{ inputs.run_s_script }}"
        echo "  - T script (Refresh Working Version): ${{ inputs.run_t_script }}"
        echo "  - U script (Deploy to Production): ${{ inputs.run_u_script }}"
        echo "📁 Check deployment logs artifact for error details"